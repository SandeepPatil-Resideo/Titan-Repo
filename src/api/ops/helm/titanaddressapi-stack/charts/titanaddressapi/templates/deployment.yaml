apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "titanaddressapi.name" . }}
  labels:
    app: {{ template "titanaddressapi.name" . }}
    chart: {{ template "titanaddressapi.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "titanaddressapi.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/logging: {{ include (print $.Template.BasePath "/configmap_logging.yaml") . | sha256sum }}
      labels:
        app: {{ template "titanaddressapi.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: "tdp"
          image: "{{ template "logging.image" . }}"
          imagePullPolicy: {{ .Values.logging.pullPolicy }}
          env:
          - name: output_elasticsearch_index
            value: "{{ .Values.logging.index }}"
          - name: setup_template_pattern
            value: "{{ .Values.logging.index }}"
          envFrom:
          - configMapRef:
              name: logging-titanaddressapi
          - secretRef:
              name: logging
        - name: {{ .Chart.Name }}
          image: "{{ template "image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: titanaddressapi
          env:
          - name: TITAN_CONFIG_SECRET_PATH
            value: "/etc/secrets"
          livenessProbe:
            httpGet:
              port: 5000
              path: /health/live
            initialDelaySeconds: 90
            timeoutSeconds: 10
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 5000
            initialDelaySeconds: 90
            timeoutSeconds: 10
            periodSeconds: 60
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP